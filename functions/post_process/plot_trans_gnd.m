function plot_trans_gnd(prob, gt, prior_param, pulse_period, interval)

    pulse_period = pulse_period / 1e6;
    
    rate = (prob - 1) / pulse_period;
    gt_rate = -(gt - 1) / pulse_period;

    for idx = size(rate, 2):-1:1
        bounds(idx,:) = quantile(-rate(idx:2:end, idx), interval);
    end

    colors = linspecer(4);
    labels = {...
            '95% conf.', ...
            'Post. prob. dist.', ...
            'Prior dist.', ...
            'Ground truth'};

    num_columns = numel(labels);
    line_width = 2;

    figure
    tiledlayout(1, 2);
    nexttile;
    h1 = histogram(-rate(1:2:end, 1), ...
        'Normalization', 'pdf', ...
        'FaceColor', colors(1, :), ...
        'FaceAlpha', 1);
    hold on
    area([bounds(1,1), bounds(1,3)], [max(h1.Values), max(h1.Values)], ...
        'FaceColor', [0, 0, 0.6], ...
        'FaceAlpha', 0.1, ...
        'EdgeColor', 'none')
    uistack(h1, 'top')
    x = linspace(0, max(h1.BinEdges), 3001);
    %x = pulse_period * linspace(0, max(h1.BinEdges), 3001);
    plot(x, rate_prior(pulse_period * x, prior_param(1, 2), prior_param(1, 1), pulse_period), ...
        'Color', colors(2, :), ...
        'LineWidth', line_width)
    plot([gt_rate(1, 1), gt_rate(1, 1)], [0, max(h1.Values)], ...
        'Color', colors(4, :), ...
        'LineWidth', line_width)

    %if nargin == 5
    %    plot([varargin{1}(1, 2), varargin{1}(1, 2)], [0, max(h1.Values)], ...
    %        'Color', colors(3, :), ...
    %        'LineWidth', line_width)
    %end

    hold off
    ylabel('PDF')
    xlabel('Trans. rate (1/ms)')
    ylim([0, max(h1.Values)])
    xlim([0, max(h1.BinEdges)])
    box off

    nexttile;
    h2 = histogram(-rate(2:2:end, 2), ...
        'Normalization', 'pdf', ...
        'FaceColor', colors(1, :), ...
        'FaceAlpha', 1);
    hold on
    area([bounds(2, 1), bounds(2,3)], [max(h2.Values), max(h2.Values)], ...
        'FaceColor', [0, 0, 0.6], ...
        'FaceAlpha', 0.1, ...
        'EdgeColor', 'none')
    uistack(h2, 'top')
    x = linspace(0, max(h2.BinEdges), 3001);
    plot(x, rate_prior(pulse_period * x, prior_param(2, 1), prior_param(2, 2), pulse_period), ...
        'Color', colors(2, :), ...
        'LineWidth', line_width)
    plot([gt_rate(2, 2), gt_rate(2, 2)], [0, max(h2.Values)], ...
        'Color', colors(4, :), ...
        'LineWidth', line_width)

    %if nargin == 5
    %    plot([varargin{1}(2, 1), varargin{1}(2, 1)], [0, max(h1.Values)], ...
    %        'Color', colors(3, :), ...
    %        'LineWidth', line_width)
    %end

    hold off
    ylabel('PDF')
    xlabel('Trans. rate (1/ms)')
    ylim([0, max(h2.Values)])
    xlim([0, max(h2.BinEdges)])
    box off

    lgd = legend(labels, ...
        'NumColumns', num_columns, ...
        'FontSize', 11);
    lgd.Box = 'off';
    lgd.Layout.Tile = 'North';
end

function p = rate_prior(prob, a, b, t)    
    p = t*betapdf(prob, a, b);
end
