function plot_diff_gnd(coef, real_coef, prior_param, interval)

    for idx = size(coef, 2):-1:1
        bounds(idx,:) = quantile(coef(:, idx), interval);
    end

    colors = linspecer(4);
    labels = {...
            '95% conf.', ...
            'Post. prob. dist.', ...
            'Prior dist.', ...
            'Ground truth'};

    num_columns = numel(labels);
    line_width = 2;
    
    figure
    tiledlayout(1, size(coef, 2))
    nexttile;
    h1 = histogram(coef(:,1), ...
        'Normalization', 'pdf', ...
        'FaceAlpha', 1, ...
        'FaceColor', colors(1,:));
    hold on
    area([bounds(1, 1), bounds(1, 3)], [max(h1.Values), max(h1.Values)], ...
        'FaceColor', [0, 0, 0.6], ...
        'FaceAlpha', 0.1, ...
        'EdgeColor', 'none')
    uistack(h1, 'top')
    x = linspace(0, max(h1.BinEdges), 1001);
    plot(x, invgampdf(x, prior_param(1, 1), 1e9 * prior_param(1, 2)), 'Color', colors(2,:), ...
        'LineWidth', line_width)
    plot(1e9 * [real_coef(1), real_coef(1)], [0, max(h1.Values)], ...
        'Color', colors(4, :), ...
        'LineWidth', line_width)
    
    hold off
    ylim([0, max(h1.Values)])
    ylabel('PDF')
    xlim([min(h1.BinEdges), max(h1.BinEdges)])
    xlabel('Diffusion coeff. (\mum^2/s)')
    box off

    nexttile;
    h2 = histogram(coef(:,2), ...
        'Normalization', 'pdf', ...
        'FaceAlpha', 1, ...
        'FaceColor', colors(1,:));
    hold on
    area([bounds(2, 1), bounds(2, 3)], [max(h2.Values), max(h2.Values)], ...
        'FaceColor', [0, 0, 0.6], ...
        'FaceAlpha', 0.1, ...
        'EdgeColor', 'none')
    uistack(h2, 'top')
    x = linspace(0, max(h2.BinEdges), 1001);
    plot(x, invgampdf(x, prior_param(2, 1), 1e9 * prior_param(2, 2)), 'Color', colors(2,:), ...
        'LineWidth', line_width)
    plot(1e9 * [real_coef(2), real_coef(2)], [0, max(h2.Values)], ...
        'Color', colors(4, :), ...
        'LineWidth', line_width)

    hold off
    ylim([0, max(h2.Values)])
    ylabel('PDF')
    xlim([min(h2.BinEdges), max(h2.BinEdges)])
    xlabel('Diffusion coeff. (\mum^2/s)')
    box off

    lgd = legend({...
                '95% conf.', ...
                'Post. prob. dist.', ...
                'Prior dist.', ...
                'Ground truth'}, ...
        'NumColumns', num_columns, ...
        'FontSize', 11);
    lgd.Box = 'off';
    lgd.Layout.Tile = 'North';
